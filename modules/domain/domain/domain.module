<?php

/**
 * @file
 * Defines a Domain concept for use with Drupal.
 */

use Drupal\domain\DomainInterface;
use Drupal\domain\Entity\Domain;
use Drupal\Core\Entity\EntityInterface;

/**
 * Defines record matching types when dealing with request alteration.
 *
 * @see hook_domain_request_alter().
 */
define('DOMAIN_MATCH_NONE', 0);
define('DOMAIN_MATCH_EXACT', 1);
define('DOMAIN_MATCH_ALIAS', 2);

/**
 * Implements hook_entity_bundle_info().
 */
function domain_entity_bundle_info() {
  $bundles['domain']['domain'] = array(
    'label' => t('Domain record'),
    'admin' => array(
      'real path' => 'admin/config/domain',
    ),
  );
  return $bundles;
}

/**
 * Implements hook_entity_load().
 *
 * The $domain->path and $domain->uri properties are derived from data in the
 * {domain} table. We use the hook system to load that data to indicate that
 * the data is not native to the object.
 *
 * This action is performed in hook_entity_load(), which precedes the running
 * of hook_domain_load() and ensures that our data is present for other modules.
 */
function domain_entity_load(array $entities, $entity_type) {
  if ($entity_type == 'domain') {
    foreach ($entities as $domain) {
      $domain->setPath();
      $domain->setUrl();
    }
  }
}
